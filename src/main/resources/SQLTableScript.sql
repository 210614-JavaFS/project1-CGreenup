
DROP TABLE IF EXISTS ERS_REIMBURSEMENT_STATUS CASCADE;
CREATE TABLE ERS_REIMBURSEMENT_STATUS(
	REIMB_STATUS_ID 	SERIAL 		PRIMARY KEY NOT NULL,
	REIMB_STATUS 		VARCHAR(10)	NOT NULL UNIQUE 
);

INSERT INTO ERS_REIMBURSEMENT_STATUS (REIMB_STATUS)
VALUES	('PENDING'),
		('APPROVED'),
		('DENIED');

DROP TABLE IF EXISTS ERS_REIMBURSEMENT_TYPE CASCADE;
CREATE TABLE ERS_REIMBURSEMENT_TYPE(
	REIMB_TYPE_ID 		SERIAL 		PRIMARY KEY NOT NULL,
	REIMB_TYPE 			VARCHAR(10) NOT NULL
);

INSERT INTO ERS_REIMBURSEMENT_TYPE (REIMB_TYPE)
VALUES	('MOVING'),
		('PARKING'),
		('COMMUTE'),
		('BUSINESS'),
		('OTHER');

DROP TABLE IF EXISTS ERS_USER_ROLES CASCADE;
CREATE TABLE ERS_USER_ROLES(
	ERS_USER_ROLES_ID 	SERIAL 		PRIMARY KEY NOT NULL,
	USER_ROLE 			VARCHAR(10)	NOT NULL UNIQUE
);
INSERT INTO ERS_USER_ROLES (USER_ROLE) 
VALUES 	('MANAGER'), 
		('EMPLOYEE');

DROP TABLE IF EXISTS ERS_USERS CASCADE;
CREATE TABLE ERS_USERS(
	ERS_USER_ID 	SERIAL 			PRIMARY KEY,
	ERS_USERNAME 	VARCHAR(50)		UNIQUE NOT NULL,
	ERS_PASSWORD	VARCHAR(64)		NOT NULL,
	USER_EMAIL		VARCHAR(150)	UNIQUE NOT NULL,
	USER_FIRST_NAME	VARCHAR(100)	NOT NULL,
	USER_LAST_NAME	VARCHAR(100)	NOT NULL,
	USER_ROLE_ID	INTEGER			NOT NULL REFERENCES ERS_USER_ROLES(ERS_USER_ROLES_ID)
);
INSERT INTO ERS_USERS (ERS_USERNAME, ERS_PASSWORD, USER_EMAIL, USER_FIRST_NAME, USER_LAST_NAME, USER_ROLE_ID)
VALUES 
('juneadmin', 'd74ff0ee8da3b9806b18c877dbf29bbde50b5bd8e4dad7a3a725000feb82e8f1', 'admin@email.com', 'June', 'Greenup', (SELECT ERS_USER_ROLES_ID FROM ERS_USER_ROLES UR WHERE UR.USER_ROLE = 'MANAGER')),
('juneemployee', 'd74ff0ee8da3b9806b18c877dbf29bbde50b5bd8e4dad7a3a725000feb82e8f1', 'employee@email.com', 'Juniper', 'Greenup', (SELECT ERS_USER_ROLES_ID FROM ERS_USER_ROLES UR WHERE UR.USER_ROLE = 'EMPLOYEE')),
('cwilderstein', 'b94d27b9934d3e08a52e52d7da7dabfac484efe37a5380ee9088f7ace2efcde9', 'epiccravis@email.com', 'Cravis', 'Wilderstein', (SELECT ERS_USER_ROLES_ID FROM ERS_USER_ROLES UR WHERE UR.USER_ROLE = 'EMPLOYEE'));


DROP TABLE IF EXISTS ERS_REIMBURSEMENT CASCADE;
CREATE TABLE ERS_REIMBURSEMENT(
	REIMB_ID SERIAL 	PRIMARY KEY 		NOT NULL,
	REIMB_AMOUNT 		DOUBLE PRECISION 	NOT NULL CHECK(REIMB_AMOUNT >= 0),
	REIMB_SUBMITTED		TIMESTAMP			NOT NULL,
	REIMB_RESOLVED		TIMESTAMP,
	REIMB_DESCRIPTION	VARCHAR(250),
	REIMB_RECEIPT		BYTEA,
	REIMB_AUTHOR		INTEGER				NOT NULL REFERENCES ERS_USERS(ERS_USER_ID),
	REIMB_RESOLVER		INTEGER				REFERENCES ERS_USERS(ERS_USER_ID),
	REIMB_STATUS_ID		INTEGER				NOT NULL REFERENCES ERS_REIMBURSEMENT_STATUS(REIMB_STATUS_ID),
	REIMB_TYPE_ID		INTEGER				NOT NULL REFERENCES ERS_REIMBURSEMENT_TYPE(REIMB_TYPE_ID)
);


--Test to see if these select statements work
SELECT * FROM ERS_USERS EU INNER JOIN ERS_USER_ROLES EUR ON EUR.ERS_USER_ROLES_ID = EU.USER_ROLE_ID WHERE EU.ERS_USERNAME = 'juneadmin';
SELECT * FROM ERS_USERS EU INNER JOIN ERS_USER_ROLES EUR ON EUR.ERS_USER_ROLES_ID = EU.USER_ROLE_ID WHERE EU.USER_EMAIL = 'employee@email.com';


SELECT 
r.REIMB_ID, r.REIMB_AMOUNT, t.REIMB_TYPE, r.REIMB_DESCRIPTION, s.REIMB_STATUS 
FROM 		ERS_REIMBURSEMENT r 
INNER JOIN 	ERS_REIMBURSEMENT_TYPE t 	ON r.REIMB_TYPE_ID = t.REIMB_TYPE_ID 
INNER JOIN 	ERS_REIMBURSEMENT_STATUS s 	ON r.REIMB_STATUS_ID = s.REIMB_STATUS_ID
ORDER BY REIMB_SUBMITTED DESC ;

--This is an example of the sql statement used for Manager's requesting each type
SELECT 
r.REIMB_ID, r.REIMB_AMOUNT, t.REIMB_TYPE, r.REIMB_DESCRIPTION, s.REIMB_STATUS
FROM 		ERS_REIMBURSEMENT r 
INNER JOIN 	ERS_REIMBURSEMENT_TYPE t 	ON r.REIMB_TYPE_ID = t.REIMB_TYPE_ID 
INNER JOIN 	ERS_REIMBURSEMENT_STATUS s 	ON r.REIMB_STATUS_ID = s.REIMB_STATUS_ID
INNER JOIN ERS_USERS u					ON r.REIMB_AUTHOR = u.ERS_USER_ID 
WHERE u.ERS_USERNAME = 'juneemployee' AND s.REIMB_STATUS = 'PENDING'
ORDER BY REIMB_SUBMITTED ASC;


SELECT 
r.REIMB_ID, r.REIMB_AMOUNT, t.REIMB_TYPE, r.REIMB_DESCRIPTION, u.USER_FIRST_NAME , u.USER_LAST_NAME, r.REIMB_SUBMITTED 
FROM 		ERS_REIMBURSEMENT r 
INNER JOIN 	ERS_REIMBURSEMENT_TYPE t 	ON r.REIMB_TYPE_ID = t.REIMB_TYPE_ID 
INNER JOIN 	ERS_REIMBURSEMENT_STATUS s 	ON r.REIMB_STATUS_ID = s.REIMB_STATUS_ID
INNER JOIN ERS_USERS u					ON r.REIMB_AUTHOR = u.ERS_USER_ID 
WHERE s.REIMB_STATUS = 'PENDING'
ORDER BY REIMB_SUBMITTED ASC;

SELECT 
r.REIMB_ID, r.REIMB_AMOUNT, t.REIMB_TYPE, r.REIMB_DESCRIPTION, u.USER_FIRST_NAME , u.USER_LAST_NAME, r.REIMB_SUBMITTED, u.ERS_USER_ID 
FROM 		ERS_REIMBURSEMENT r 
INNER JOIN 	ERS_REIMBURSEMENT_TYPE t 	ON r.REIMB_TYPE_ID = t.REIMB_TYPE_ID 
INNER JOIN 	ERS_REIMBURSEMENT_STATUS s 	ON r.REIMB_STATUS_ID = s.REIMB_STATUS_ID
INNER JOIN ERS_USERS u					ON r.REIMB_AUTHOR = u.ERS_USER_ID 
WHERE r.REIMB_ID = 3 ;


SELECT r.REIMB_ID, r.REIMB_AMOUNT, t.REIMB_TYPE, r.REIMB_DESCRIPTION, s.REIMB_STATUS FROM ERS_REIMBURSEMENT r INNER JOIN ERS_REIMBURSEMENT_TYPE t ON r.REIMB_TYPE_ID = t.REIMB_TYPE_ID INNER JOIN ERS_REIMBURSEMENT_STATUS s ON r.REIMB_STATUS_ID = s.REIMB_STATUS_ID;

UPDATE ERS_REIMBURSEMENT SET REIMB_STATUS_ID = 2 WHERE REIMB_ID = 2;

DELETE FROM ERS_REIMBURSEMENT WHERE REIMB_DESCRIPTION = 'test';